# UFS_UTILS test workflow.
#
# This workflow tests all developer options - address santizer,
# warning check, documentation check, and test code coverage.
#
# Ed Hartnett 12/11/22
name: developer 
on:
  push:
    branches:
    - develop
    paths-ignore:
    - README.md
  pull_request:
    branches:
    - develop
    paths-ignore:
    - README.md

defaults:
  run:
    shell: bash -exo pipefail {0}

jobs:
  developer:
    runs-on: ubuntu-latest
    env:
      FC: mpifort
      CC: mpicc
      FCFLAGS: -fallow-argument-mismatch

    steps:

    - name: install-dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libpng-dev zlib1g-dev libjpeg-dev doxygen libmpich-dev
        sudo apt-get install libnetcdf-dev libnetcdff-dev netcdf-bin pkg-config        
        python3 -m pip install gcovr

    - name: cache-esmf
      id: cache-esmf
      uses: actions/cache@v2
      with:
        path: ~/esmf
        key: developer-esmf-8.2.0-${{ runner.os }}3

    - name: build-esmf
      if: steps.cache-esmf.outputs.cache-hit != 'true'
      run: |
        pushd ~
        export ESMF_DIR=~/esmf-ESMF_8_2_0
        wget https://github.com/esmf-org/esmf/archive/ESMF_8_2_0.tar.gz &> /dev/null
        tar zxf ESMF_8_2_0.tar.gz
        cd esmf-ESMF_8_2_0
        export ESMF_COMM=mpich3
        export ESMF_INSTALL_BINDIR=bin
        export ESMF_INSTALL_LIBDIR=lib
        export ESMF_INSTALL_MODDIR=mod
        export ESMF_COMPILER=gfortran
        export ESMF_INSTALL_PREFIX=~/esmf
        export ESMF_NETCDF=split
        export ESMF_NETCDF_INCLUDE=/usr/include
        export ESMF_NETCDF_LIBPATH=/usr/x86_64-linux-gnu
        make -j2
        make install

    - name: cache-jasper
      id: cache-jasper
      uses: actions/cache@v2
      with:
        path: ~/jasper
        key: developer-jasper-${{ runner.os }}-3.0.3-1

    - name: checkout-jasper
      if: steps.cache-jasper.outputs.cache-hit != 'true'    
      uses: actions/checkout@v2
      with:
        repository: jasper-software/jasper
        path: jasper
        ref: version-3.0.3

    - name: build-jasper
      if: steps.cache-jasper.outputs.cache-hit != 'true'
      run: |
        cd jasper
        mkdir build-jasper && cd build-jasper
        cmake .. -DCMAKE_INSTALL_PREFIX=~/jasper
        make -j2
        make install

    - name: cache-bacio
      id: cache-bacio
      uses: actions/cache@v2
      with:
        path: ~/bacio
        key: developer-bacio-${{ runner.os }}-v2.4.1

    - name: checkout-bacio
      if: steps.cache-bacio.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: NOAA-EMC/NCEPLIBS-bacio
        path: bacio
        ref: v2.4.1
    
    - name: build-bacio
      if: steps.cache-bacio.outputs.cache-hit != 'true'
      run: |
        cd bacio
        mkdir build && cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=~/bacio
        make -j2
        make install

    - name: cache-sp
      id: cache-sp
      uses: actions/cache@v2
      with:
        path: ~/sp
        key: developer-sp-${{ runner.os }}-2.3.3-1

    - name: checkout-sp
      if: steps.cache-sp.outputs.cache-hit != 'true'
      uses: actions/checkout@v2
      with:
        repository: NOAA-EMC/NCEPLIBS-sp
        path: sp
        ref: v2.3.3

    - name: build-sp
      if: steps.cache-sp.outputs.cache-hit != 'true'
      run: |
        cd sp
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=~/sp
        make -j2
        make install

    - name: checkout-w3emc
      uses: actions/checkout@v2
      with:
        repository: NOAA-EMC/NCEPLIBS-w3emc
        path: w3emc
        ref: develop

    - name: build-w3emc
      run: |
        cd w3emc
        mkdir build
        cd build
        cmake -DCMAKE_PREFIX_PATH=~/bacio -DCMAKE_INSTALL_PREFIX=~/w3emc ..
        make -j2
        make install
        
    - name: checkout-g2c
      uses: actions/checkout@v2
      with:
        repository: NOAA-EMC/NCEPLIBS-g2c
        path: g2c
        ref: develop

    - name: build-g2c
      run: |
        cd g2c
        mkdir build
        cd build
        cmake .. -DCMAKE_INSTALL_PREFIX=~/g2c -DJasper_ROOT=~/jasper
        make -j2
        make install
        
    - name: checkout
      uses: actions/checkout@v2
      with:
        path: g2

    - name:  build
      run: |
        set -x
        cd g2
        mkdir build
        doxygen --version
        cd build
#        cmake .. -DFTP_TEST_FILES=ON -DTEST_FILE_DIR=/home/runner/data -DENABLE_DOCS=On -DJasper_ROOT=~/jasper -DCMAKE_PREFIX_PATH="~/g2c;~/bacio;~/w3emc" -DCMAKE_Fortran_FLAGS="-g -fprofile-abs-path -fprofile-arcs -ftest-coverage -O0 -Wall -fsanitize=address" -DCMAKE_C_FLAGS="-g -fprofile-abs-path -fprofile-arcs -ftest-coverage -O0 -Wall -fsanitize=address"  -DCMAKE_BUILD_TYPE=Debug 
#        make -j2 VERBOSE=1


